!function(e,t){for(var o in t)e[o]=t[o]}(exports,function(e){var t={};function o(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,o),s.l=!0,s.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)o.d(r,s,function(t){return e[t]}.bind(null,s));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.activate=void 0;const s=o(1),n=r(o(2));t.activate=async function(e){s.workspace.showMessage("coc-please works!"),e.subscriptions.push(s.commands.registerCommand("coc-please.Command",async()=>{s.workspace.showMessage("coc-please Commands works!")}),s.listManager.registerList(new n.default(s.workspace.nvim)),s.sources.createSource({name:"coc-please completion source",shortcut:"[CS]",priority:1,triggerPatterns:[],doComplete:async()=>await async function(){return{items:[{word:"TestCompletionItem 1"},{word:"TestCompletionItem 2"}]}}()}),s.workspace.registerKeymap(["n"],"coc-please-keymap",async()=>{s.workspace.showMessage("registerKeymap")},{sync:!1}),s.workspace.registerAutocmd({event:"InsertLeave",request:!0,callback:()=>{s.workspace.showMessage("registerAutocmd on InsertLeave")}}))}},function(e,t){e.exports=require("coc.nvim")},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=o(1);class s extends r.BasicList{constructor(e){super(e),this.name="demo_list",this.description="CocList for coc-please",this.defaultAction="open",this.actions=[],this.addAction("open",e=>{r.workspace.showMessage(`${e.label}, ${e.data.name}`)})}async loadItems(e){return[{label:"coc-please list item 1",data:{name:"list item 1"}},{label:"coc-please list item 2",data:{name:"list item 2"}}]}}t.default=s}]));